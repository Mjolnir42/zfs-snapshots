#!/bin/sh
#
# Copyright (c) 2013-2014  1&1 Internet AG
# All rights reserved.
# Written by Joerg Pernfuss <joerg.pernfuss@1und1.de>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# If there is a global system configuration file, suck it in.
#
if [ -r /etc/defaults/periodic.conf ]
then
  . /etc/defaults/periodic.conf
  source_periodic_confs
fi

# Default value of 10 days viability if not configured
_viability=${daily_zfs_snapshots_cleanup_viability:-10}

rc=0
case "${daily_zfs_snapshots_cleanup_enable}" in
    [Yy][Ee][Ss])

  case "${daily_zfs_snapshots_cleanup_clear_snapshots}" in
      [Yy][Ee][Ss])
      # Checks:
      # - script variable is set
      # - script exists and is a file (needed as -x is true for directories)
      # - script exists and is executable
    if  [ -n "${daily_zfs_snapshots_cleanup_script_snapshots}" ] &&
        [ -f "${daily_zfs_snapshots_cleanup_script_snapshots}" ] &&
        [ -x "${daily_zfs_snapshots_cleanup_script_snapshots}" ]
    then
      _command="${daily_zfs_snapshots_cleanup_script_snapshots}"
      ${_command} -d ${_viability}
      if [ $? -gt 0 ]
      then
        s_rc=$?
        echo "Error during cleanup of backup storage (${s_rc})."
        if [ ${s_rc} -gt ${rc} ]
        then
          rc=${s_rc}
        fi
      fi
    fi
    ;;
      *)
    ;;
  esac

  case "${daily_zfs_snapshots_cleanup_clear_storage}" in
      [Yy][Ee][Ss])
      # Checks:
      # - script variable is set
      # - script exists and is a file (needed as -x is true for directories)
      # - script exists and is executable
    if  [ -n "${daily_zfs_snapshots_cleanup_script_storage}" ] &&
        [ -f "${daily_zfs_snapshots_cleanup_script_storage}" ] &&
        [ -x "${daily_zfs_snapshots_cleanup_script_storage}" ]
    then
      _command="${daily_zfs_snapshots_cleanup_script_storage}"
      ${_command} -d ${_viability}
      if [ $? -gt 0 ]
      then
        s_rc=$?
        echo "Error during cleanup of backup storage (${s_rc})."
        if [ ${s_rc} -gt ${rc} ]
        then
          rc=${s_rc}
        fi
      fi
    fi
    ;;
      *)
    ;;
  esac
  ;;
    *)
  ;;
esac
exit $rc
